#- debug:
#    var:
#      hostvars['manager0']
#  run_once: true

- name: set hostname
  ansible.builtin.hostname:
    name: "{{inventory_hostname}}"
  when: set_hostname

- name: set up timezone
  ansible.builtin.shell:
    "sudo timedatectl set-timezone Asia/Shanghai"
  args:
    executable: /bin/bash

- name: disable firewall
  ansible.builtin.shell:
    "sudo systemctl stop ufw; sudo systemctl disable ufw"
  args:
    executable: /bin/bash
  when: disable_firewall and ansible_distribution == 'Ubuntu'

- name: install nfs client
  ansible.builtin.apt:
    update_cache: true
    name: nfs-common
  when: ansible_os_family == 'Debian'

- name: install nfs client
  ansible.builtin.yum:
    name: nfs-utils
  when: ansible_os_family == 'RedHat'

- name: disable apt auto update
  ansible.builtin.copy:
    dest: /etc/apt/apt.conf.d/99-disable-updates.conf
    content: |
      APT::Periodic::Update-Package-Lists "0";
      APT::Periodic::Download-Upgradeable-Packages "0";
      APT::Periodic::AutocleanInterval "0";
      APT::Periodic::Unattended-Upgrade "0";
  when: disable_package_auto_update and ansible_os_family == 'Debian'

- name: hold snap updates indefinitely
  ansible.builtin.shell: sudo snap set system refresh.hold=forever
  args:
    executable: /bin/bash
  changed_when: false
  when: disable_package_auto_update and ansible_os_family == 'Debian'

- name: Disable yum-cron
  systemd:
    name: yum-cron
    state: stopped
    enabled: no
  when: disable_package_auto_update and ansible_os_family == 'RedHat' and ansible_distribution_major_version < '8'

- name: Disable dnf-automatic
  systemd:
    name: dnf-automatic.timer
    state: stopped
    enabled: no
  when: disable_package_auto_update and ansible_os_family == 'RedHat' and ansible_distribution_major_version >= '8'

- name: prepare working directory
  ansible.builtin.file:
    path: "/home/{{ for_user }}/docker"
    state: directory
    mode: '0775'
    owner: "{{ for_user }}"
    group: "{{ for_user }}"
