groups:
  - name: cAdvisor-monitoring
    rules:
      
      # cpu | threshold: 70% of one single core 
      - record: container_cpu_core_usage_percent:name_service_instance
        expr: |2
          (sum by (name, service, instance)
          (rate(container_cpu_usage_seconds_total{stack=~'dals|test'}[2m]))) * 100
          
      - alert: HighContainerCpuCoreUsagePercent
        expr: container_cpu_core_usage_percent:name_service_instance > 70
        for: 2m
        keep_firing_for: 1h
        labels:
          severity: warning
          component: container
        annotations:
          summary: "HighContainerCpuCoreUsagePercent for container {{ $labels.name }}"
          description: 
            "Container {{ $labels.name }} running on {{ $labels.instance }} 
            has used {{ $value }}% of one single cpu core(threshold: 70%)."
          
      # memory | threshold: 70% of assigned memory 
      - record: container_memory_usage_percent:name_service_instance
        expr: |2
            (container_memory_working_set_bytes{stack=~'dals|test'}  
          / on(name, service, instance) 
            container_spec_memory_limit_bytes{stack=~'dals|test'}) * 100
            
      - alert: HighContainerMemoryUsagePercent
        expr: container_memory_usage_percent:name_service_instance > 70
        for: 2m
        keep_firing_for: 1h
        labels:
          severity: warning
          component: container
        annotations:
          summary: "HighContainerMemoryUsagePercent for container {{ $labels.name }}"
          description: 
            "Container {{ $labels.name }} running on {{ $labels.instance }} 
            has used {{ $value }}% of its memory limit(threshold: 70%)."
      
      # blkio read | threshold: 10 MB/s
      - record: container_blkio_rate_read:name_service_instance_device
        expr: |2
          (sum(rate(container_blkio_device_usage_total{stack=~'dals|test',operation='Read'}[2m]))
          by (name, service, instance, device)) / 1_000

      - alert: HighContainerBlkioRateRead
        expr: container_blkio_rate_read:name_service_instance_device > 10_000
        for: 2m
        keep_firing_for: 1h
        labels:
          severity: warning
          component: container
          unit: KB/s
        annotations:
          summary: "HighContainerBlkioRateRead for container {{ $labels.name }}"
          description: 
            "Container {{ $labels.name }} running on {{ $labels.instance }} 
            experienced a Block I/O READ rate of {{ $value }} MB/s on {{ $labels.device }} in past 2 minutes(threshold: 10 MB/s)."
        
      # blkio write | threshold: 10 MB/s
      - record: container_blkio_rate_write:name_service_instance_device
        expr: |2
          (sum(rate(container_blkio_device_usage_total{stack=~'dals|test',operation='Write'}[2m]))
          by (name, service, instance, device)) / 1_000

      - alert: HighContainerBlkioRateWrite
        expr: container_blkio_rate_write:name_service_instance_device > 10_000
        for: 2m
        keep_firing_for: 1h
        labels:
          severity: warning
          component: container
          unit: KB/s
        annotations:
          summary: "HighContainerBlkioRateWrite for container {{ $labels.name }}"
          description: 
            "Container {{ $labels.name }} running on {{ $labels.instance }} 
            experienced a Block I/O WRITE rate of {{ $value }} MB/s on {{ $labels.device }} in past 2 minutes(threshold: 10 MB/s)."
           
      # file system usage | threshold: 70% of maximum capacity
      - record: container_fs_usage_percent:name_service_instance_device
        expr: |2
            (container_fs_usage_bytes{stack=~'dals|test'}
          / on(name, service, instance, device) 
            container_fs_limit_bytes{stack=~'dals|test'}) * 100

      - alert: HighContainerFileSystemUsagePercent
        expr: container_fs_usage_percent:name_service_instance_device > 70
        for: 2m
        keep_firing_for: 1h
        labels:
          severity: warning
          component: container
        annotations:
          summary: "HighContainerFileSystemUsagePercent for container {{ $labels.name }}"
          description: 
            "Container {{ $labels.name }} running on {{ $labels.instance }} 
            used {{ $value }}% of the file system limit on {{ $labels.device }}(threshold: 70%)."
          
      # file system read | threshold: 10 MB/s
      - record: container_fs_rate_read:name_service_instance_device
        expr: |2
          (sum(rate(container_fs_reads_bytes_total{stack=~'dals|test'}[2m])) 
          by (name, service, instance, device)) / 1_000

      - alert: HighContainerFileSystemRateRead
        expr: container_fs_rate_read:name_service_instance_device > 10_000
        for: 2m
        keep_firing_for: 1h
        labels:
          severity: warning
          component: container
          unit: KB/s
        annotations:
          summary: "HighContainerFileSystemRateRead for container {{ $labels.name }}"
          description: 
            "Container {{ $labels.name }} running on {{ $labels.instance }} 
            experienced a File System READ rate of {{ $value }} MB/s on {{ $labels.device }} in past 5 minutes(threshold: 10 MB/s)."
           
      # file system write | threshold: 10 MB/s
      - record: container_fs_rate_write:name_service_instance_device
        expr: |2
          (sum(rate(container_fs_writes_bytes_total{stack=~'dals|test'}[2m])) 
          by (name, service, instance, device)) / 1_000
          
      - alert: HighContainerFileSystemRateWrite
        expr: container_fs_rate_write:name_service_instance_device > 10_000
        for: 2m
        keep_firing_for: 1h
        labels:
          severity: warning
          component: container
          unit: KB/s
        annotations:
          summary: "HighContainerFileSystemRateWrite for container {{ $labels.name }}"
          description: 
            "Container {{ $labels.name }} running on {{ $labels.instance }} 
            experienced a File System WRITE rate of {{ $value }} MB/s on {{ $labels.device }} in past 5 minutes(threshold: 10 MB/s)."
         
      # container offline | threshold: 60s lost of heartbeat
      - record: container_last_beat_seconds:name_service_instance
        expr: |2
          sum by (name, service, instance)
          (time() - container_last_seen{stack=~'dals|test'})
          
      - alert: ContainerOffline
        expr: container_last_beat_seconds:name_service_instance > 60
        for: 30s
        keep_firing_for: 1d
        labels:
          severity: info
          component: container
        annotations:
          summary: "ContainerOffline for container {{ $labels.name }}"
          description: 
            "Container {{ $labels.name }} running on {{ $labels.instance }} 
            lost for {{ $value }} s (threshold: 60 s)."
      
      # service offline | threshold: 60s lost of heartbeat
      - record: service_last_beat_seconds:service
        expr: |2
          time() - (max(container_last_seen{stack=~'dals|test'}) by (service))
          
      - alert: ServiceOffline
        expr: service_last_beat_seconds:service > 60
        for: 30s
        keep_firing_for: 1d
        labels:
          severity: critical
          component: service
        annotations:
          summary: "ServiceOffline for {{ $labels.service }}"
          description: 
            "Service {{ $labels.service }} lost for {{ $value }} s (threshold: 60 s)."
            
      # instance service offline | threshold: 60s lost of heartbeat
      - record: service_last_beat_seconds:instance_service
        expr: |2
          time() - (max(container_last_seen{stack=~'dals|test'}) by (service, instance))
          
      - alert: InstanceServiceOffline
        expr: service_last_beat_seconds:instance_service > 60
        for: 30s
        keep_firing_for: 1d
        labels:
          severity: warning
          component: service
        annotations:
          summary: "InstanceServiceOffline for {{ $labels.service }}"
          description: 
            "Service {{ $labels.service }} lost on {{ $labels.instance }} for {{ $value }} s (threshold: 60 s)."
      
      # container network receive rate
      - record: container_network_kilobytes_rate_receive:name_service_instance
        expr: |2
          (sum(rate(container_network_receive_bytes_total{stack=~'dals|test'}[2m])) 
          by (name, service, instance)) / 1_000
          
      # container network transmit rate
      - record: container_network_kilobytes_rate_transmit:name_service_instance
        expr: |2
          (sum(rate(container_network_transmit_bytes_total{stack=~'dals|test'}[2m])) 
          by (name, service, instance)) / 1_000
          
      # container network errors rate | threshold: 10 packets per second
      - record: container_network_error_rate:name_service_instance
        expr: |2
          sum by (name, service, instance)
          (rate(container_network_receive_errors_total{stack=~'dals|test'}[2m]) + rate(container_network_transmit_errors_total{stack=~'dals|test'}[2m]))
          
      - alert: HighContainerNetworkErrorRate
        expr: container_network_error_rate:name_service_instance > 10
        for: 2m
        keep_firing_for: 1h
        labels:
          severity: warning
          component: container
        annotations:
          summary: "HighContainerNetworkErrorRate for container {{ $labels.name }}"
          description: 
            "Container {{ $labels.name }} running on {{ $labels.instance }} 
            experienced a network error rate of {{ $value }} count/s on {{ $labels.device }} in past 5 minutes(threshold: 10 count/s)."
      
      # container network packet drop rate | threshold: 10 packets per second
      - record: container_network_packet_drop_rate:name_service_instance
        expr: |2
          sum by (name, service, instance)
          (rate(container_network_receive_packets_dropped_total{stack=~'dals|test'}[2m]) + rate(container_network_transmit_packets_dropped_total{stack=~'dals|test'}[2m]))
          
      - alert: HighContainerNetworkPacketDropRate
        expr: container_network_packet_drop_rate:name_service_instance > 10
        for: 2m
        keep_firing_for: 1h
        labels:
          severity: warning
          component: container
        annotations:
          summary: "HighContainerNetworkPacketDropRate for container {{ $labels.name }}"
          description: 
            "Container {{ $labels.name }} running on {{ $labels.instance }} 
            experienced a network packet drop rate of {{ $value }} count/s on {{ $labels.device }} in past 5 minutes(threshold: 10 count/s)."
      
      #
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
      
